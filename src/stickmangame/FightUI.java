/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stickmangame;

import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Christopher
 */
public class FightUI extends javax.swing.JFrame
  {

    private static MobUnit e;
    private static StickMan p;
    private static String fightText = "";
    private static String fightResult = "";
    private static Coord co;

    /**
     * Creates new form FightUI
     */
    public FightUI()
      {
        initComponents();
        UIManager.put("ProgressBar.foreground", Color.GREEN);
        UIManager.put("ProgressBar.background", Color.GREEN);

        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

      }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 5), new java.awt.Dimension(0, 5), new java.awt.Dimension(32767, 5));
        jPanel1 = new javax.swing.JPanel();
        lblEnemy = new javax.swing.JLabel();
        lblPlayer = new javax.swing.JLabel();
        lblPlayerHealth = new javax.swing.JLabel();
        lblPlayerHP = new javax.swing.JLabel();
        enemyHealthBar = new javax.swing.JProgressBar();
        PlayerHealthBar = new javax.swing.JProgressBar();
        lblEnemyHealth = new javax.swing.JLabel();
        lblEnemyHP = new javax.swing.JLabel();
        lblEnemyArmour = new javax.swing.JLabel();
        lblPlayerArmour = new javax.swing.JLabel();
        lblPlayerAP = new javax.swing.JLabel();
        lblEnemyAP = new javax.swing.JLabel();
        lblOptions = new javax.swing.JLabel();
        btnAttack = new javax.swing.JButton();
        btnFlee = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaFightText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblEnemy.setText("Enemy");

        lblPlayer.setText("Player");

        lblPlayerHealth.setText("Health:");

        lblPlayerHP.setText(""+StickManGame.getCharacter().getHealth());

        enemyHealthBar.setMinimum(0);
        enemyHealthBar.setForeground(Color.GREEN);
        enemyHealthBar.setMaximum(100);
        enemyHealthBar.setValue((int)(StickManGame.getCharacter().getHealth()/StickManGame.getCharacter().getMaxHealth()*100));

        PlayerHealthBar.setMinimum(0);
        PlayerHealthBar.setMaximum(100);
        PlayerHealthBar.setValue((int)(StickManGame.getCharacter().getHealth()/StickManGame.getCharacter().getMaxHealth()*100));
        PlayerHealthBar.setForeground(Color.blue);
        PlayerHealthBar.setBackground(Color.blue);

        lblEnemyHealth.setText("Health:");

        lblEnemyHP.setText("");

        lblEnemyArmour.setText("Armour:");

        lblPlayerArmour.setText("Armour:");

        lblPlayerAP.setText(""+StickManGame.getCharacter().getArmour());

        lblEnemyAP.setText("");

        lblOptions.setText("Options:");

        btnAttack.setText("Attack");
        btnAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAttackActionPerformed(evt);
            }
        });

        btnFlee.setText("Flee");
        btnFlee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFleeActionPerformed(evt);
            }
        });

        txaFightText.setColumns(20);
        txaFightText.setRows(5);
        jScrollPane1.setViewportView(txaFightText);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(lblPlayer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblEnemy)
                .addGap(62, 62, 62))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PlayerHealthBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPlayerHealth)
                            .addComponent(lblPlayerArmour))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPlayerAP)
                            .addComponent(lblPlayerHP))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enemyHealthBar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEnemyHealth)
                            .addComponent(lblEnemyArmour))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEnemyAP)
                            .addComponent(lblEnemyHP))))
                .addGap(17, 17, 17))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblOptions)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAttack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnFlee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEnemy)
                    .addComponent(lblPlayer))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlayerHealth)
                    .addComponent(lblPlayerHP)
                    .addComponent(lblEnemyHealth)
                    .addComponent(lblEnemyHP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEnemyArmour)
                    .addComponent(lblPlayerArmour)
                    .addComponent(lblPlayerAP)
                    .addComponent(lblEnemyAP))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enemyHealthBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PlayerHealthBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(lblOptions)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAttack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFlee)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAttackActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAttackActionPerformed
    {//GEN-HEADEREND:event_btnAttackActionPerformed
        double resEnDam = Math.round(((e.getDamage() * (e.getHealth() / e.getMaxHealth())) / 2) + (e.getDamage() / 2));
        double resDam = Math.round(((p.getDamage() * (p.getHealth() / p.getMaxHealth())) / 2) + (p.getDamage() / 2));
        double multi = 1.0;
        double multi2 = 1.0;

        p.addHealth((-resEnDam));
        e.addHealth(-resDam);

        int StrAndDMG = (int) Math.round(Math.random() * 2);

        switch (StrAndDMG)
          {
            case 2:
                multi = 0.5;
                break;
            case 3:
                multi = 1.5;
                break;
          }
        int Arm = (int) Math.round(Math.random() * 2);

        switch (Arm)
          {
            case 2:
                multi2 = 0.5;
                break;
            case 3:
                multi2 = 1.5;
                break;
          }

        fightText = ("You attack the " + e.getName() + " for " + Math.round(resDam * multi)
                + " damage\n" + e.getFightString(StrAndDMG) + "\nIt deals " + Math.round(resEnDam * multi2) + " damage");

        reload();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAttackActionPerformed

    private void btnFleeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnFleeActionPerformed
    {//GEN-HEADEREND:event_btnFleeActionPerformed
        JOptionPane.showMessageDialog(null, "You managed to escape!");
        StickManGame.unPauseWithBreak();
        dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_btnFleeActionPerformed

    /**
     * @param en enemy to fight
     * @param c Coords of enemy
     */
    public static void startFightUI(MobUnit en, Coord c)
      {
        e = en;
        co = c;
        p = StickManGame.getCharacter();// TODO add your handling code here:

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
          {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
              {
                if ("Nimbus".equals(info.getName()))
                  {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                  }
              }
          } catch (ClassNotFoundException ex)
          {
            java.util.logging.Logger.getLogger(FightUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (InstantiationException ex)
          {
            java.util.logging.Logger.getLogger(FightUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (IllegalAccessException ex)
          {
            java.util.logging.Logger.getLogger(FightUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (javax.swing.UnsupportedLookAndFeelException ex)
          {
            java.util.logging.Logger.getLogger(FightUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
          {
            public void run()
              {
                new FightUI().setVisible(true);
                lblEnemy.setText(e.getName());
                lblEnemyHP.setText("" + e.getHealth());
                lblEnemyAP.setText("" + e.getArmour());
              }
          });
      }

    public void reload()
      {
        lblEnemyHP.setText("" + Math.round(e.getHealth() * 100.0) / 100.0);
        lblPlayerHP.setText("" + Math.round(p.getHealth() * 100.0) / 100.0);
        PlayerHealthBar.setValue((int) (p.getHealth() / p.getMaxHealth() * 100));
        enemyHealthBar.setValue((int) (e.getHealth() / e.getMaxHealth() * 100));
        txaFightText.setText(fightText);

        if (e.getHealth() <= 0 && p.getHealth() <= 0)
          {
            JOptionPane.showMessageDialog(null, "Both you and the " + e.getName() + " deal a devastating blow at the same time.\nNear death, you manage to escape to safety, \nleaving the spoils of the fight");
            e.kill();
            endFight();
            fightResult = "BD";
          } else if (e.getHealth() <= 0)
          {
            ArrayList<Special> loot = e.getDropsArray();
            JOptionPane.showMessageDialog(null, "You deal a fatal blow to the " + e.getName());
            if (loot.size() > 0)
              {
                String lootString = "You have looted:";
                for (int loop = 0; loop < loot.size(); loop++)
                  {
                    p.addToInv(loot.get(loop));
                    lootString = lootString + "\n" + loot.get(loop).getName() + " (" + loot.get(loop).getType() + ")";
                  }
                int gold = e.lootedGold();
                p.addGold(gold);
                lootString = lootString + "\nAnd " + gold + " gold coins.";

                JOptionPane.showMessageDialog(null, lootString);
              }
            e.kill();
            endFight();
            fightResult = "Won";
          } else if (p.getHealth() <= 0)
          {
            JOptionPane.showMessageDialog(null, "The " + e.getName() + " deals a devastating blow.\nNear death, you manage to escape to safety.");
            endFight();
            fightResult = "Lost";
          }
      }

    public void endFight()
      {
        StickManGame.setPlayer(p);
        StickManGame.setMob(e, co);
        dispose();
        StickManGame.unPauseWithBreak();
      }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JProgressBar PlayerHealthBar;
    private javax.swing.JButton btnAttack;
    private javax.swing.JButton btnFlee;
    private static javax.swing.JProgressBar enemyHealthBar;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JLabel lblEnemy;
    private static javax.swing.JLabel lblEnemyAP;
    private javax.swing.JLabel lblEnemyArmour;
    private static javax.swing.JLabel lblEnemyHP;
    private javax.swing.JLabel lblEnemyHealth;
    private javax.swing.JLabel lblOptions;
    private javax.swing.JLabel lblPlayer;
    private javax.swing.JLabel lblPlayerAP;
    private javax.swing.JLabel lblPlayerArmour;
    private static javax.swing.JLabel lblPlayerHP;
    private javax.swing.JLabel lblPlayerHealth;
    private static javax.swing.JTextArea txaFightText;
    // End of variables declaration//GEN-END:variables
}
