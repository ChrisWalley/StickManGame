/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stickmangame;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import static stickmangame.StickManGame.*;

/**
 *
 * @author Christopher
 */
public class Inventory extends javax.swing.JFrame
  {

    private static StickMan p;

    /**
     * Creates new form Inventory
     */
    public Inventory()
      {
        p = StickManGame.getCharacter();
        initComponents();
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter()
          {
            @Override
            public void windowClosing(WindowEvent e)
              {
                StickManGame.unPauseWithBreak();
                dispose();
              }
          });
      }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblEquipped = new javax.swing.JLabel();
        lblHelm = new javax.swing.JLabel();
        lblChest = new javax.swing.JLabel();
        lblLegs = new javax.swing.JLabel();
        lblBoots = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstInventory = new javax.swing.JList();
        lblInv = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstHelm = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstChest = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstLegs = new javax.swing.JList();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstFeet = new javax.swing.JList();
        btnUse = new javax.swing.JButton();
        btnEquip = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        txaAction = new javax.swing.JTextArea();
        lblBoots1 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        lstWeapon = new javax.swing.JList();
        btnUnequip = new javax.swing.JButton();
        lblDamage = new javax.swing.JLabel();
        lblArmour = new javax.swing.JLabel();
        lblHealth = new javax.swing.JLabel();
        lblDamagePoints = new javax.swing.JLabel();
        lblArmourPoints = new javax.swing.JLabel();
        lblHealthPoints = new javax.swing.JLabel();
        lblGold = new javax.swing.JLabel();
        lblGoldAmount = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblEquipped.setText("Equipped Items");

        lblHelm.setText("Helm:");

        lblChest.setText("Chest:");

        lblLegs.setText("Legs:");

        lblBoots.setText("Feet:");

        lstInventory.setModel(new javax.swing.AbstractListModel()
            {
                String[] strings = StickManGame.getCharacter().getInventoryString();
                public int getSize() { return strings.length; }
                public Object getElementAt(int i) { return strings[i]; }
            });
            jScrollPane1.setViewportView(lstInventory);

            lblInv.setText("Inventory");

            lstHelm.setModel(new javax.swing.AbstractListModel()
                {
                    String[] strings = {StickManGame.getCharacter().getEquipped(StickManGame.HELM).getName()};
                    public int getSize() { return strings.length; }
                    public Object getElementAt(int i) { return strings[i]; }
                });
                jScrollPane2.setViewportView(lstHelm);

                lstChest.setModel(new javax.swing.AbstractListModel()
                    {
                        String[] strings = {StickManGame.getCharacter().getEquipped(StickManGame.CHEST).getName()};
                        public int getSize() { return strings.length; }
                        public Object getElementAt(int i) { return strings[i]; }
                    });
                    jScrollPane3.setViewportView(lstChest);

                    lstLegs.setModel(new javax.swing.AbstractListModel()
                        {
                            String[] strings = {StickManGame.getCharacter().getEquipped(StickManGame.LEGS).getName()};
                            public int getSize() { return strings.length; }
                            public Object getElementAt(int i) { return strings[i]; }
                        });
                        jScrollPane4.setViewportView(lstLegs);

                        lstFeet.setModel(new javax.swing.AbstractListModel()
                            {
                                String[] strings = {StickManGame.getCharacter().getEquipped(StickManGame.FEET).getName()};
                                public int getSize() { return strings.length; }
                                public Object getElementAt(int i) { return strings[i]; }
                            });
                            jScrollPane5.setViewportView(lstFeet);

                            btnUse.setText("Use");
                            btnUse.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    btnUseActionPerformed(evt);
                                }
                            });

                            btnEquip.setText("Equip");
                            btnEquip.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    btnEquipActionPerformed(evt);
                                }
                            });

                            txaAction.setColumns(20);
                            txaAction.setRows(5);
                            jScrollPane6.setViewportView(txaAction);

                            lblBoots1.setText("Weapon:");

                            lstWeapon.setModel(new javax.swing.AbstractListModel()
                                {
                                    String[] strings = {StickManGame.getCharacter().getWeapon().getName()};
                                    public int getSize() { return strings.length; }
                                    public Object getElementAt(int i) { return strings[i]; }
                                });
                                jScrollPane7.setViewportView(lstWeapon);

                                btnUnequip.setText("Unequip");
                                btnUnequip.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                        btnUnequipActionPerformed(evt);
                                    }
                                });

                                lblDamage.setText("Damage:");

                                lblArmour.setText("Armour:");

                                lblHealth.setText("Health:");

                                lblDamagePoints.setText(""+p.getDamage());

                                lblArmourPoints.setText(""+p.getArmour());

                                lblHealthPoints.setText(""+p.getHealth());

                                lblGold.setText("Gold:");

                                lblGoldAmount.setText(""+p.getGold());

                                btnClose.setText("Close");
                                btnClose.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                        btnCloseActionPerformed(evt);
                                    }
                                });

                                javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                                jPanel1.setLayout(jPanel1Layout);
                                jPanel1Layout.setHorizontalGroup(
                                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblBoots1)
                                                    .addComponent(lblHelm)
                                                    .addComponent(lblChest)
                                                    .addComponent(lblLegs)
                                                    .addComponent(lblBoots))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(129, 129, 129)
                                                        .addComponent(btnUnequip))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addContainerGap()
                                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(27, 27, 27)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(btnEquip)
                                                        .addGap(21, 21, 21)
                                                        .addComponent(btnUse))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(lblDamage)
                                                            .addComponent(lblArmour)
                                                            .addComponent(lblHealth)
                                                            .addComponent(lblGold))
                                                        .addGap(24, 24, 24)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(lblGoldAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(lblArmourPoints, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(lblDamagePoints, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(lblHealthPoints, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                                        .addContainerGap())
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(lblEquipped)
                                        .addGap(168, 168, 168)
                                        .addComponent(lblInv)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnClose))
                                );
                                jPanel1Layout.setVerticalGroup(
                                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(14, 14, 14)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblEquipped)
                                                    .addComponent(lblInv)))
                                            .addComponent(btnClose))
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(8, 8, 8)
                                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(8, 8, 8)
                                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(7, 7, 7)
                                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(lblHelm)
                                                        .addGap(12, 12, 12)
                                                        .addComponent(lblChest)
                                                        .addGap(12, 12, 12)
                                                        .addComponent(lblLegs)
                                                        .addGap(12, 12, 12)
                                                        .addComponent(lblBoots)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblBoots1)
                                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(4, 4, 4)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(btnEquip)
                                                .addComponent(btnUnequip))
                                            .addComponent(btnUse))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(lblDamage)
                                                    .addComponent(lblDamagePoints))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(lblArmour)
                                                    .addComponent(lblArmourPoints))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(lblHealth)
                                                    .addComponent(lblHealthPoints))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(lblGold)
                                                    .addComponent(lblGoldAmount))))
                                        .addContainerGap())
                                );

                                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                                getContentPane().setLayout(layout);
                                layout.setHorizontalGroup(
                                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                );
                                layout.setVerticalGroup(
                                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                );

                                pack();
                                setLocationRelativeTo(null);
                            }// </editor-fold>//GEN-END:initComponents

    private void btnEquipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnEquipActionPerformed
    {//GEN-HEADEREND:event_btnEquipActionPerformed

        if (StickManGame.getCharacter().getInventory().get(lstInventory.getSelectedIndex()).getClass() == Armour.class)
          {
            Armour a = (Armour) StickManGame.getCharacter().getInventory().get(lstInventory.getSelectedIndex());
            StickManGame.getCharacter().equip(a, a.getSlot());
            switch (a.getSlot())
              {
                case HELM:
                    lstHelm.setModel(new javax.swing.AbstractListModel()
                      {
                        String[] strings =
                          {
                            StickManGame.getCharacter().getEquipped(StickManGame.HELM).getName()
                          };

                        public int getSize()
                          {
                            return strings.length;
                          }

                        public Object getElementAt(int i)
                          {
                            return strings[i];
                          }
                      });
                    break;

                case CHEST:
                    lstChest.setModel(new javax.swing.AbstractListModel()
                      {
                        String[] strings =
                          {
                            StickManGame.getCharacter().getEquipped(StickManGame.CHEST).getName()
                          };

                        public int getSize()
                          {
                            return strings.length;
                          }

                        public Object getElementAt(int i)
                          {
                            return strings[i];
                          }
                      });
                    break;

                case LEGS:
                    lstLegs.setModel(new javax.swing.AbstractListModel()
                      {
                        String[] strings =
                          {
                            StickManGame.getCharacter().getEquipped(StickManGame.LEGS).getName()
                          };

                        public int getSize()
                          {
                            return strings.length;
                          }

                        public Object getElementAt(int i)
                          {
                            return strings[i];
                          }
                      });
                    break;

                case FEET:
                    lstFeet.setModel(new javax.swing.AbstractListModel()
                      {
                        String[] strings =
                          {
                            StickManGame.getCharacter().getEquipped(StickManGame.FEET).getName()
                          };

                        public int getSize()
                          {
                            return strings.length;
                          }

                        public Object getElementAt(int i)
                          {
                            return strings[i];
                          }
                      });
                    break;
              }
            txaAction.setText("Equipped " + a.getName());
          } else if (StickManGame.getCharacter().getInventory().get(lstInventory.getSelectedIndex()).getClass() == Weapon.class)
          {
            Weapon a = (Weapon) StickManGame.getCharacter().getInventory().get(lstInventory.getSelectedIndex());
            StickManGame.getCharacter().setWeapon(a);
            lstWeapon.setModel(new javax.swing.AbstractListModel()
              {
                String[] strings =
                  {
                    StickManGame.getCharacter().getWeapon().getName()
                  };

                public int getSize()
                  {
                    return strings.length;
                  }

                public Object getElementAt(int i)
                  {
                    return strings[i];
                  }
              });
            txaAction.setText("Equipped " + a.getName());

          } else
          {
            txaAction.setText("You cannot equip this item!");
          }

        reload();
// TODO add your handling code here:
    }//GEN-LAST:event_btnEquipActionPerformed

    private void btnUnequipActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnUnequipActionPerformed
    {//GEN-HEADEREND:event_btnUnequipActionPerformed
        if (!lstHelm.isSelectionEmpty())
          {
            StickManGame.getCharacter().unEquip(HELM);
            lstHelm.setModel(new javax.swing.AbstractListModel()
              {
                String[] strings =
                  {
                    StickManGame.getCharacter().getEquipped(StickManGame.HELM).getName()
                  };

                public int getSize()
                  {
                    return strings.length;
                  }

                public Object getElementAt(int i)
                  {
                    return strings[i];
                  }
              });
            txaAction.setText("Un-equipped Helm");
          } else if (!lstChest.isSelectionEmpty())
          {
            StickManGame.getCharacter().unEquip(CHEST);
            lstChest.setModel(new javax.swing.AbstractListModel()
              {
                String[] strings =
                  {
                    StickManGame.getCharacter().getEquipped(StickManGame.CHEST).getName()
                  };

                public int getSize()
                  {
                    return strings.length;
                  }

                public Object getElementAt(int i)
                  {
                    return strings[i];
                  }
              });
            txaAction.setText("Un-equipped Chestpiece");
          } else if (!lstLegs.isSelectionEmpty())
          {
            StickManGame.getCharacter().unEquip(LEGS);
            lstLegs.setModel(new javax.swing.AbstractListModel()
              {
                String[] strings =
                  {
                    StickManGame.getCharacter().getEquipped(StickManGame.LEGS).getName()
                  };

                public int getSize()
                  {
                    return strings.length;
                  }

                public Object getElementAt(int i)
                  {
                    return strings[i];
                  }
              });
            txaAction.setText("Un-equipped Leggings");
          } else if (!lstFeet.isSelectionEmpty())
          {
            StickManGame.getCharacter().unEquip(FEET);
            lstFeet.setModel(new javax.swing.AbstractListModel()
              {
                String[] strings =
                  {
                    StickManGame.getCharacter().getEquipped(StickManGame.FEET).getName()
                  };

                public int getSize()
                  {
                    return strings.length;
                  }

                public Object getElementAt(int i)
                  {
                    return strings[i];
                  }
              });
            txaAction.setText("Un-equipped Boots");
          } else if (!lstWeapon.isSelectionEmpty())
          {
            StickManGame.getCharacter().unEquipWeapon();
            lstWeapon.setModel(new javax.swing.AbstractListModel()
              {
                String[] strings =
                  {
                    StickManGame.getCharacter().getWeapon().getName()
                  };

                public int getSize()
                  {
                    return strings.length;
                  }

                public Object getElementAt(int i)
                  {
                    return strings[i];
                  }
              });
            txaAction.setText("Un-equipped Weapon");
          }
        reload();
    }//GEN-LAST:event_btnUnequipActionPerformed

    private void btnUseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnUseActionPerformed
    {//GEN-HEADEREND:event_btnUseActionPerformed

        Special e = StickManGame.getCharacter().getInventory().get(lstInventory.getSelectedIndex());
        if (e.isUsable())
          {
            txaAction.setText(StickManGame.use(e));
          } else
          {
            txaAction.setText("You cannot use this item");
          }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUseActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        StickManGame.unPauseWithBreak();
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void startUI()
      {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
          {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
              {
                if ("Nimbus".equals(info.getName()))
                  {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                  }
              }
          } catch (ClassNotFoundException ex)
          {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (InstantiationException ex)
          {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (IllegalAccessException ex)
          {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (javax.swing.UnsupportedLookAndFeelException ex)
          {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
          {
            public void run()
              {
                new Inventory().setVisible(true);
              }
          });
      }

    public static void reload()
      {
        lblArmourPoints.setText("" + p.getArmour());
        lblDamagePoints.setText("" + p.getDamage());
        lblHealthPoints.setText("" + p.getHealth());
      }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnEquip;
    private javax.swing.JButton btnUnequip;
    private javax.swing.JButton btnUse;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lblArmour;
    private static javax.swing.JLabel lblArmourPoints;
    private javax.swing.JLabel lblBoots;
    private javax.swing.JLabel lblBoots1;
    private javax.swing.JLabel lblChest;
    private javax.swing.JLabel lblDamage;
    private static javax.swing.JLabel lblDamagePoints;
    private javax.swing.JLabel lblEquipped;
    private javax.swing.JLabel lblGold;
    private static javax.swing.JLabel lblGoldAmount;
    private javax.swing.JLabel lblHealth;
    private static javax.swing.JLabel lblHealthPoints;
    private javax.swing.JLabel lblHelm;
    private javax.swing.JLabel lblInv;
    private javax.swing.JLabel lblLegs;
    private javax.swing.JList lstChest;
    private javax.swing.JList lstFeet;
    private javax.swing.JList lstHelm;
    private javax.swing.JList lstInventory;
    private javax.swing.JList lstLegs;
    private javax.swing.JList lstWeapon;
    private javax.swing.JTextArea txaAction;
    // End of variables declaration//GEN-END:variables
}
